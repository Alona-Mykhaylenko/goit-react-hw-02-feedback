{"version":3,"sources":["components/statistics/Statistics.js","components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","components/notificationMessage/NotificationMessage.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","totalCount","positiveFeedbackPercent","Number","isNaN","FeedbackOptions","addGood","addNeutral","addBad","type","onClick","Section","children","title","NotificationMessage","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","total","Math","round","this","positiveFeedback","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAyCeA,EAtCI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,WACAC,EALiB,EAKjBA,wBALiB,OAOjB,8BACE,+BACE,+BACE,0CACA,+BAAOJ,OAET,+BACE,6CACA,+BAAOC,OAET,+BACE,yCACA,+BAAOC,OAET,+BACE,2CACA,+BAAOC,OAET,+BACE,uDACA,iCACGE,OAAOC,MAAMF,GACV,IACAA,EACH,gBCjBIG,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,WAAYC,EAAxB,EAAwBA,OAAxB,OACtB,gCACE,wBAAQC,KAAK,SAASC,QAASJ,EAA/B,kBAGA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,qBAGA,wBAAQE,KAAK,SAASC,QAASF,EAA/B,qBCCWG,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,qCACE,6BAAKA,IACJD,MCHQE,EAFa,kBAAM,mDC+EnBC,E,4MA1EbC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,QAAU,WACR,EAAKW,UAAS,SAACC,GACb,MAAO,CACLpB,KAAMoB,EAAUpB,KAAO,O,EAK7BS,WAAa,WACX,EAAKU,UAAS,SAACC,GACb,MAAO,CACLnB,QAASmB,EAAUnB,QAAU,O,EAKnCS,OAAS,WACP,EAAKS,UAAS,SAACC,GACb,MAAO,CACLlB,IAAKkB,EAAUlB,IAAM,O,EAK3BmB,mBAAqB,WACnB,MAA+B,EAAKH,MAEpC,OAFA,EAAQhB,IAAR,EAAaD,QAAb,EAAsBD,M,EAKxBsB,gCAAkC,WAChC,IAAMC,EAAQ,EAAKF,qBACXrB,EAAS,EAAKkB,MAAdlB,KAER,OADyBwB,KAAKC,MAAc,IAAPzB,EAAcuB,I,4CAIrD,WACE,IAAMA,EAAQG,KAAKL,qBACbM,EAAmBD,KAAKJ,kCAC9B,OACE,gCACE,cAAC,EAAD,CAASP,MAAM,wBAAf,SACE,cAAC,EAAD,CACEP,QAASkB,KAAKlB,QACdC,WAAYiB,KAAKjB,WACjBC,OAAQgB,KAAKhB,WAIhBa,EAAQ,EACP,cAAC,EAAD,CAASR,MAAM,aAAf,SACE,cAAC,EAAD,CACEf,KAAM0B,KAAKR,MAAMlB,KACjBC,QAASyB,KAAKR,MAAMjB,QACpBC,IAAKwB,KAAKR,MAAMhB,IAChBC,WAAYoB,EACZnB,wBAAyBuB,MAI7B,cAAC,EAAD,W,GApEQC,IAAMC,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.00651d12.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  totalCount,\r\n  positiveFeedbackPercent,\r\n}) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        <span>Good: </span>\r\n        <span>{good}</span>\r\n      </li>\r\n      <li>\r\n        <span>Neutral: </span>\r\n        <span>{neutral}</span>\r\n      </li>\r\n      <li>\r\n        <span>Bad: </span>\r\n        <span>{bad}</span>\r\n      </li>\r\n      <li>\r\n        <span>Total: </span>\r\n        <span>{totalCount}</span>\r\n      </li>\r\n      <li>\r\n        <span>Positive feedback: </span>\r\n        <span>\r\n          {Number.isNaN(positiveFeedbackPercent)\r\n            ? \"0\"\r\n            : positiveFeedbackPercent}\r\n          {\"%\"}\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  totalCount: PropTypes.number.isRequired,\r\n  positiveFeedbackPercent: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ addGood, addNeutral, addBad }) => (\r\n  <div>\r\n    <button type=\"button\" onClick={addGood}>\r\n      Good\r\n    </button>\r\n    <button type=\"button\" onClick={addNeutral}>\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" onClick={addBad}>\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  addGood: PropTypes.func.isRequired,\r\n  addNeutral: PropTypes.func.isRequired,\r\n  addBad: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nconst NotificationMessage = () => <p>No feedback given</p>;\r\n\r\nexport default NotificationMessage;\r\n","import React from \"react\";\r\nimport Statistics from \"./components/statistics/Statistics\";\r\nimport FeedbackOptions from \"./components/feedbackOptions/FeedbackOptions\";\r\nimport Section from \"./components/section/Section\";\r\nimport NotificationMessage from \"./components/notificationMessage/NotificationMessage\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  addGood = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        good: prevState.good + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  addNeutral = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        neutral: prevState.neutral + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  addBad = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        bad: prevState.bad + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { bad, neutral, good } = this.state;\r\n    const total = bad + neutral + good;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    const { good } = this.state;\r\n    const positiveFeedback = Math.round((good * 100) / total);\r\n    return positiveFeedback;\r\n  };\r\n\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            addGood={this.addGood}\r\n            addNeutral={this.addNeutral}\r\n            addBad={this.addBad}\r\n          />\r\n        </Section>\r\n\r\n        {total > 0 ? (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              totalCount={total}\r\n              positiveFeedbackPercent={positiveFeedback}\r\n            />\r\n          </Section>\r\n        ) : (\r\n          <NotificationMessage />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}